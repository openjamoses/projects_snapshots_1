package(default_visibility = ["//tools/build_defs:internal_pkg"])

licenses(["notice"])  # Apache 2.0


cc_library(
    name = "streaming_aead_wrapper",
    srcs = ["streaming_aead_wrapper.cc"],
    hdrs = ["streaming_aead_wrapper.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        ":decrypting_input_stream",
        "//cc:crypto_format",
        "//cc:input_stream",
        "//cc:output_stream",
        "//cc:primitive_set",
        "//cc:primitive_wrapper",
        "//cc:registry",
        "//cc:streaming_aead",
        "//cc/util:status",
        "//cc/util:statusor",
        "//proto:tink_cc_proto",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "streaming_aead_catalogue",
    srcs = ["streaming_aead_catalogue.cc"],
    hdrs = ["streaming_aead_catalogue.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        ":aes_gcm_hkdf_streaming_key_manager",
        "//cc:catalogue",
        "//cc:key_manager",
        "//cc:streaming_aead",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "streaming_aead_config",
    srcs = ["streaming_aead_config.cc"],
    hdrs = ["streaming_aead_config.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        ":streaming_aead_catalogue",
        ":streaming_aead_wrapper",
        "//cc:config",
        "//cc:registry",
        "//cc/util:status",
        "//proto:config_cc_proto",
        "@com_google_absl//absl/memory",
    ],
)

cc_library(
    name = "streaming_aead_key_templates",
    srcs = ["streaming_aead_key_templates.cc"],
    hdrs = ["streaming_aead_key_templates.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        "//proto:aes_gcm_hkdf_streaming_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
    ],
)

cc_library(
    name = "aes_gcm_hkdf_streaming_key_manager",
    srcs = ["aes_gcm_hkdf_streaming_key_manager.cc"],
    hdrs = ["aes_gcm_hkdf_streaming_key_manager.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        "//cc:key_manager",
        "//cc:key_manager_base",
        "//cc:streaming_aead",
        "//cc/subtle:aes_gcm_hkdf_streaming",
        "//cc/subtle:random",
        "//cc/util:enums",
        "//cc/util:errors",
        "//cc/util:protobuf_helper",
        "//cc/util:status",
        "//cc/util:statusor",
        "//cc/util:validation",
        "//proto:aes_gcm_hkdf_streaming_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "buffered_input_stream",
    srcs = ["buffered_input_stream.cc"],
    hdrs = ["buffered_input_stream.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        "//cc:input_stream",
        "//cc/util:errors",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/memory",
    ],
)

cc_library(
    name = "shared_input_stream",
    srcs = ["shared_input_stream.h"],
    hdrs = ["shared_input_stream.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        "//cc:input_stream",
        "//cc/util:errors",
        "//cc/util:statusor",
        "@com_google_absl//absl/memory",
    ],
)

cc_library(
    name = "decrypting_input_stream",
    srcs = ["decrypting_input_stream.cc"],
    hdrs = ["decrypting_input_stream.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        ":buffered_input_stream",
        ":shared_input_stream",
        "//cc:input_stream",
        "//cc:primitive_set",
        "//cc:streaming_aead",
        "//cc/util:errors",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_absl//absl/memory",
    ],
)

# tests

cc_test(
    name = "streaming_aead_wrapper_test",
    size = "small",
    srcs = ["streaming_aead_wrapper_test.cc"],
    copts = ["-Iexternal/gtest/include"],
    deps = [
        ":streaming_aead_wrapper",
        "//cc:input_stream",
        "//cc:output_stream",
        "//cc:primitive_set",
        "//cc:streaming_aead",
        "//cc/subtle:random",
        "//cc/subtle:test_util",
        "//cc/util:istream_input_stream",
        "//cc/util:ostream_output_stream",
        "//cc/util:status",
        "//cc/util:test_matchers",
        "//cc/util:test_util",
        "//proto:tink_cc_proto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "aes_gcm_hkdf_streaming_key_manager_test",
    size = "small",
    srcs = ["aes_gcm_hkdf_streaming_key_manager_test.cc"],
    deps = [
        ":aes_gcm_hkdf_streaming_key_manager",
        "//cc:streaming_aead",
        "//cc/subtle:random",
        "//cc/subtle:test_util",
        "//cc/util:istream_input_stream",
        "//cc/util:ostream_output_stream",
        "//cc/util:status",
        "//cc/util:statusor",
        "//proto:aes_eax_cc_proto",
        "//proto:aes_gcm_hkdf_streaming_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "streaming_aead_key_templates_test",
    size = "small",
    srcs = ["streaming_aead_key_templates_test.cc"],
    deps = [
        ":aes_gcm_hkdf_streaming_key_manager",
        ":streaming_aead_key_templates",
        "//proto:aes_gcm_hkdf_streaming_cc_proto",
        "//proto:common_cc_proto",
        "//proto:tink_cc_proto",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "streaming_aead_catalogue_test",
    size = "small",
    srcs = ["streaming_aead_catalogue_test.cc"],
    deps = [
        ":streaming_aead_catalogue",
        ":streaming_aead_config",
        "//cc:catalogue",
        "//cc:streaming_aead",
        "//cc/util:status",
        "//cc/util:statusor",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "streaming_aead_config_test",
    size = "small",
    srcs = ["streaming_aead_config_test.cc"],
    deps = [
        ":streaming_aead_config",
        ":streaming_aead_key_templates",
        "//cc:catalogue",
        "//cc:config",
        "//cc:keyset_handle",
        "//cc:registry",
        "//cc:streaming_aead",
        "//cc/util:status",
        "//cc/util:test_matchers",
        "//cc/util:test_util",
        "@com_google_absl//absl/memory",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "buffered_input_stream_test",
    size = "small",
    srcs = ["buffered_input_stream_test.cc"],
    linkopts = ["-lpthread"],
    deps = [
        ":buffered_input_stream",
        "//cc:input_stream",
        "//cc/subtle:random",
        "//cc/subtle:test_util",
        "//cc/util:istream_input_stream",
        "//cc/util:status",
        "//cc/util:test_matchers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "decrypting_input_stream_test",
    size = "small",
    srcs = ["decrypting_input_stream_test.cc"],
    deps = [
        ":decrypting_input_stream",
        "//cc:input_stream",
        "//cc:output_stream",
        "//cc:primitive_set",
        "//cc:streaming_aead",
        "//cc/subtle:random",
        "//cc/subtle:test_util",
        "//cc/util:istream_input_stream",
        "//cc/util:ostream_output_stream",
        "//cc/util:status",
        "//cc/util:test_matchers",
        "//cc/util:test_util",
        "//proto:tink_cc_proto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "shared_input_stream_test",
    size = "small",
    srcs = ["shared_input_stream_test.cc"],
    linkopts = ["-lpthread"],
    deps = [
        ":buffered_input_stream",
        ":shared_input_stream",
        "//cc:input_stream",
        "//cc/subtle:random",
        "//cc/subtle:test_util",
        "//cc/util:istream_input_stream",
        "//cc/util:status",
        "//cc/util:test_matchers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)
