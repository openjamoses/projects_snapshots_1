package(default_visibility = ["//tools/build_defs:internal_pkg"])

licenses(["notice"])

cc_library(
    name = "tink_config",
    srcs = ["tink_config.cc"],
    hdrs = ["tink_config.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    visibility = ["//visibility:public"],
    deps = [
        "//cc:config",
        "//cc:key_manager",
        "//cc/daead:deterministic_aead_config",
        "//cc/hybrid:hybrid_config",
        "//cc/signature:signature_config",
        "//cc/streamingaead:streaming_aead_config",
        "//cc/util:status",
        "//proto:config_cc_proto",
        "@com_google_absl//absl/base:core_headers",
    ],
)

cc_library(
    name = "config_util",
    srcs = ["config_util.cc"],
    hdrs = ["config_util.h"],
    include_prefix = "tink",
    strip_include_prefix = "/cc",
    deps = [
        "//proto:config_cc_proto",
    ],
)

# tests

cc_test(
    name = "tink_config_test",
    size = "small",
    srcs = ["tink_config_test.cc"],
    copts = ["-Iexternal/gtest/include"],
    deps = [
        ":tink_config",
        "//cc:aead",
        "//cc:config",
        "//cc:deterministic_aead",
        "//cc:hybrid_decrypt",
        "//cc:hybrid_encrypt",
        "//cc:mac",
        "//cc:registry",
        "//cc:streaming_aead",
        "//cc/aead:aes_gcm_key_manager",
        "//cc/util:status",
        "//cc/util:test_matchers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "config_util_test",
    size = "small",
    srcs = ["config_util_test.cc"],
    deps = [
        ":config_util",
        "@com_google_googletest//:gtest_main",
    ],
)
