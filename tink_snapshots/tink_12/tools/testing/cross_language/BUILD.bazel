package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

filegroup(
    name = "test_lib",
    srcs = [
        "test_util.sh",
    ],
)

sh_test(
    name = "keyset_reader_writer_test",
    size = "small",
    srcs = [
        "keyset_reader_writer_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing/cc:keyset_reader_writer_cli",
        "//tinkey",
    ],
)

sh_test(
    name = "version_test",
    size = "medium",
    srcs = [
        "version_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:version_cli_java",
        "//testing/cc:version_cli_cc",
        "@tink_base//:tink_version",
    ],
)

sh_test(
    name = "aead_test",
    size = "medium",
    srcs = [
        "aead_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:aead_cli_java",
        "//testing/cc:aead_cli_cc",
        "//testing/go:aead_cli_go",
        "//tinkey",
        "@tink_base//testdata:credentials",
    ],
)

sh_test(
    name = "aead_envelope_test",
    size = "medium",
    srcs = [
        "aead_envelope_test.sh",
    ],
    tags = ["no_rbe"],
    data = [
        ":test_lib",
        "//testing:aead_cli_java",
        "//testing/go:aead_cli_go",
        "//testing/go:generate_envelope_keyset",
        "//tinkey",
        "@tink_base//testdata:credentials",
    ],
)

sh_test(
    name = "deterministic_aead_test",
    size = "medium",
    srcs = [
        "deterministic_aead_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:deterministic_aead_cli_java",
        "//testing/cc:deterministic_aead_cli_cc",
        "//testing/go:deterministic_aead_cli_go",
        "//tinkey",
    ],
)

sh_test(
    name = "streaming_aead_test",
    size = "medium",
    srcs = [
        "streaming_aead_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:streaming_aead_cli_java",
        "//testing/cc:streaming_aead_cli_cc",
        "//testing/go:streaming_aead_cli_go",
        "//tinkey",
    ],
)

sh_test(
    name = "mac_test",
    size = "medium",
    srcs = [
        "mac_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:mac_cli_java",
        "//testing/cc:mac_cli_cc",
        "//testing/go:mac_cli_go",
        "//tinkey",
    ],
)

sh_test(
    name = "hybrid_encryption_test",
    size = "medium",
    srcs = [
        "hybrid_encryption_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:hybrid_decrypt_cli_java",
        "//testing:hybrid_encrypt_cli_java",
        "//testing/cc:hybrid_decrypt_cli_cc",
        "//testing/cc:hybrid_encrypt_cli_cc",
        "//testing/go:hybrid_decrypt_cli_go",
        "//testing/go:hybrid_encrypt_cli_go",
        "//tinkey",
    ],
)

sh_test(
    name = "signature_test",
    size = "large",
    timeout = "long",
    srcs = [
        "signature_test.sh",
    ],
    data = [
        ":test_lib",
        "//testing:public_key_sign_cli_java",
        "//testing:public_key_verify_cli_java",
        "//testing/cc:public_key_sign_cli_cc",
        "//testing/cc:public_key_verify_cli_cc",
        "//testing/go:public_key_sign_cli_go",
        "//testing/go:public_key_verify_cli_go",
        "//tinkey",
    ],
)
