// Copyright 2018 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
////////////////////////////////////////////////////////////////////////////////

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: third_party/tink/proto/aes_gcm_hkdf_streaming.proto

package aes_gcm_hkdf_streaming_go_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common_go_proto "github.com/google/tink/go/proto/common_go_proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AesGcmHkdfStreamingParams struct {
	CiphertextSegmentSize uint32                   `protobuf:"varint,1,opt,name=ciphertext_segment_size,json=ciphertextSegmentSize,proto3" json:"ciphertext_segment_size,omitempty"`
	DerivedKeySize        uint32                   `protobuf:"varint,2,opt,name=derived_key_size,json=derivedKeySize,proto3" json:"derived_key_size,omitempty"`
	HkdfHashType          common_go_proto.HashType `protobuf:"varint,3,opt,name=hkdf_hash_type,json=hkdfHashType,proto3,enum=google.crypto.tink.HashType" json:"hkdf_hash_type,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                 `json:"-"`
	XXX_unrecognized      []byte                   `json:"-"`
	XXX_sizecache         int32                    `json:"-"`
}

func (m *AesGcmHkdfStreamingParams) Reset()         { *m = AesGcmHkdfStreamingParams{} }
func (m *AesGcmHkdfStreamingParams) String() string { return proto.CompactTextString(m) }
func (*AesGcmHkdfStreamingParams) ProtoMessage()    {}
func (*AesGcmHkdfStreamingParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1dba2d882aaf5933, []int{0}
}

func (m *AesGcmHkdfStreamingParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AesGcmHkdfStreamingParams.Unmarshal(m, b)
}
func (m *AesGcmHkdfStreamingParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AesGcmHkdfStreamingParams.Marshal(b, m, deterministic)
}
func (m *AesGcmHkdfStreamingParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AesGcmHkdfStreamingParams.Merge(m, src)
}
func (m *AesGcmHkdfStreamingParams) XXX_Size() int {
	return xxx_messageInfo_AesGcmHkdfStreamingParams.Size(m)
}
func (m *AesGcmHkdfStreamingParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AesGcmHkdfStreamingParams.DiscardUnknown(m)
}

var xxx_messageInfo_AesGcmHkdfStreamingParams proto.InternalMessageInfo

func (m *AesGcmHkdfStreamingParams) GetCiphertextSegmentSize() uint32 {
	if m != nil {
		return m.CiphertextSegmentSize
	}
	return 0
}

func (m *AesGcmHkdfStreamingParams) GetDerivedKeySize() uint32 {
	if m != nil {
		return m.DerivedKeySize
	}
	return 0
}

func (m *AesGcmHkdfStreamingParams) GetHkdfHashType() common_go_proto.HashType {
	if m != nil {
		return m.HkdfHashType
	}
	return common_go_proto.HashType_UNKNOWN_HASH
}

type AesGcmHkdfStreamingKeyFormat struct {
	Params               *AesGcmHkdfStreamingParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	KeySize              uint32                     `protobuf:"varint,2,opt,name=key_size,json=keySize,proto3" json:"key_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AesGcmHkdfStreamingKeyFormat) Reset()         { *m = AesGcmHkdfStreamingKeyFormat{} }
func (m *AesGcmHkdfStreamingKeyFormat) String() string { return proto.CompactTextString(m) }
func (*AesGcmHkdfStreamingKeyFormat) ProtoMessage()    {}
func (*AesGcmHkdfStreamingKeyFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_1dba2d882aaf5933, []int{1}
}

func (m *AesGcmHkdfStreamingKeyFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AesGcmHkdfStreamingKeyFormat.Unmarshal(m, b)
}
func (m *AesGcmHkdfStreamingKeyFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AesGcmHkdfStreamingKeyFormat.Marshal(b, m, deterministic)
}
func (m *AesGcmHkdfStreamingKeyFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AesGcmHkdfStreamingKeyFormat.Merge(m, src)
}
func (m *AesGcmHkdfStreamingKeyFormat) XXX_Size() int {
	return xxx_messageInfo_AesGcmHkdfStreamingKeyFormat.Size(m)
}
func (m *AesGcmHkdfStreamingKeyFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_AesGcmHkdfStreamingKeyFormat.DiscardUnknown(m)
}

var xxx_messageInfo_AesGcmHkdfStreamingKeyFormat proto.InternalMessageInfo

func (m *AesGcmHkdfStreamingKeyFormat) GetParams() *AesGcmHkdfStreamingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *AesGcmHkdfStreamingKeyFormat) GetKeySize() uint32 {
	if m != nil {
		return m.KeySize
	}
	return 0
}

// key_type: type.googleapis.com/google.crypto.tink.AesGcmHkdfStreamingKey
type AesGcmHkdfStreamingKey struct {
	Version              uint32                     `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Params               *AesGcmHkdfStreamingParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	KeyValue             []byte                     `protobuf:"bytes,3,opt,name=key_value,json=keyValue,proto3" json:"key_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *AesGcmHkdfStreamingKey) Reset()         { *m = AesGcmHkdfStreamingKey{} }
func (m *AesGcmHkdfStreamingKey) String() string { return proto.CompactTextString(m) }
func (*AesGcmHkdfStreamingKey) ProtoMessage()    {}
func (*AesGcmHkdfStreamingKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_1dba2d882aaf5933, []int{2}
}

func (m *AesGcmHkdfStreamingKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AesGcmHkdfStreamingKey.Unmarshal(m, b)
}
func (m *AesGcmHkdfStreamingKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AesGcmHkdfStreamingKey.Marshal(b, m, deterministic)
}
func (m *AesGcmHkdfStreamingKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AesGcmHkdfStreamingKey.Merge(m, src)
}
func (m *AesGcmHkdfStreamingKey) XXX_Size() int {
	return xxx_messageInfo_AesGcmHkdfStreamingKey.Size(m)
}
func (m *AesGcmHkdfStreamingKey) XXX_DiscardUnknown() {
	xxx_messageInfo_AesGcmHkdfStreamingKey.DiscardUnknown(m)
}

var xxx_messageInfo_AesGcmHkdfStreamingKey proto.InternalMessageInfo

func (m *AesGcmHkdfStreamingKey) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *AesGcmHkdfStreamingKey) GetParams() *AesGcmHkdfStreamingParams {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *AesGcmHkdfStreamingKey) GetKeyValue() []byte {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

func init() {
	proto.RegisterType((*AesGcmHkdfStreamingParams)(nil), "google.crypto.tink.AesGcmHkdfStreamingParams")
	proto.RegisterType((*AesGcmHkdfStreamingKeyFormat)(nil), "google.crypto.tink.AesGcmHkdfStreamingKeyFormat")
	proto.RegisterType((*AesGcmHkdfStreamingKey)(nil), "google.crypto.tink.AesGcmHkdfStreamingKey")
}

func init() {
	proto.RegisterFile("proto/aes_gcm_hkdf_streaming.proto", fileDescriptor_1dba2d882aaf5933)
}

var fileDescriptor_1dba2d882aaf5933 = []byte{
	// 371 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x41, 0x4b, 0xeb, 0x40,
	0x18, 0x24, 0x7d, 0xd0, 0xbe, 0xb7, 0xaf, 0xaf, 0x3c, 0x02, 0x6a, 0xab, 0x3d, 0x94, 0x7a, 0xe9,
	0xc5, 0x04, 0x5a, 0xf0, 0xe4, 0xc5, 0x82, 0x5a, 0x29, 0x48, 0x49, 0x8b, 0x07, 0x2f, 0xcb, 0x36,
	0xf9, 0xba, 0x59, 0xd2, 0xcd, 0x86, 0xdd, 0x6d, 0x71, 0x7b, 0xf2, 0x57, 0xf8, 0x03, 0xfc, 0x27,
	0xfe, 0x33, 0xc9, 0xa6, 0x45, 0xd1, 0x14, 0x0f, 0x1e, 0x27, 0xf3, 0xcd, 0x30, 0x33, 0x59, 0x34,
	0xd0, 0x31, 0x93, 0x11, 0xce, 0x88, 0xd4, 0xc6, 0xd7, 0x2c, 0x4d, 0xfc, 0x4c, 0x0a, 0x2d, 0x7c,
	0x02, 0x0a, 0xd3, 0x90, 0xe3, 0x38, 0x89, 0x16, 0x58, 0x69, 0x09, 0x84, 0xb3, 0x94, 0x7a, 0x96,
	0x74, 0x5d, 0x2a, 0x04, 0x5d, 0x82, 0x17, 0x4a, 0x93, 0x69, 0xe1, 0xe5, 0xb2, 0xe3, 0xd3, 0x3d,
	0x46, 0xa1, 0xe0, 0x5c, 0xa4, 0x85, 0xb0, 0xfb, 0xea, 0xa0, 0xd6, 0x25, 0xa8, 0x9b, 0x90, 0x8f,
	0x92, 0x68, 0x31, 0xdd, 0xd9, 0x4e, 0x88, 0x24, 0x5c, 0xb9, 0xe7, 0xe8, 0x28, 0x64, 0x59, 0x0c,
	0x52, 0xc3, 0xa3, 0xc6, 0x0a, 0x28, 0x87, 0x54, 0x63, 0xc5, 0x36, 0xd0, 0x74, 0x3a, 0x4e, 0xef,
	0x5f, 0x70, 0xf0, 0x4e, 0x4f, 0x0b, 0x76, 0xca, 0x36, 0xe0, 0xf6, 0xd0, 0xff, 0x08, 0x24, 0x5b,
	0x43, 0x84, 0x13, 0x30, 0x85, 0xa0, 0x62, 0x05, 0x8d, 0xed, 0xf7, 0x31, 0x18, 0x7b, 0x39, 0x44,
	0x0d, 0x5b, 0x28, 0x26, 0x2a, 0xc6, 0xda, 0x64, 0xd0, 0xfc, 0xd5, 0x71, 0x7a, 0x8d, 0x7e, 0xdb,
	0xfb, 0xda, 0xc8, 0x1b, 0x11, 0x15, 0xcf, 0x4c, 0x06, 0x41, 0x3d, 0xd7, 0xec, 0x50, 0xf7, 0xc9,
	0x41, 0xed, 0x92, 0x0e, 0x63, 0x30, 0xd7, 0x42, 0x72, 0xa2, 0xdd, 0x2b, 0x54, 0xcd, 0x6c, 0x21,
	0x9b, 0xfa, 0x6f, 0xff, 0xac, 0xcc, 0x7c, 0xef, 0x0a, 0xc1, 0x56, 0xec, 0xb6, 0xd0, 0xef, 0x4f,
	0x6d, 0x6a, 0x49, 0x51, 0xa3, 0xfb, 0xec, 0xa0, 0xc3, 0xf2, 0x08, 0x6e, 0x13, 0xd5, 0xd6, 0x20,
	0x15, 0x13, 0xe9, 0x76, 0xb3, 0x1d, 0xfc, 0x10, 0xab, 0xf2, 0x93, 0x58, 0x27, 0xe8, 0x4f, 0x1e,
	0x6b, 0x4d, 0x96, 0xab, 0x62, 0xbd, 0x7a, 0x90, 0xe7, 0xbc, 0xcf, 0xf1, 0x90, 0xa2, 0x76, 0x28,
	0x78, 0x99, 0xb1, 0xfd, 0xff, 0x13, 0xe7, 0xe1, 0x82, 0x32, 0x1d, 0xaf, 0xe6, 0x5e, 0x28, 0xb8,
	0x5f, 0x9c, 0x7d, 0xff, 0xea, 0x30, 0x15, 0xd8, 0xf2, 0x2f, 0x95, 0xea, 0xec, 0xf6, 0x6e, 0x3c,
	0x19, 0xce, 0xab, 0x16, 0x0f, 0xde, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x7b, 0x10, 0xc0, 0xbf,
	0x02, 0x00, 0x00,
}
