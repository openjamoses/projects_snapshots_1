package(default_visibility = ["//tools/build_defs:internal_pkg"])

licenses(["notice"])  # Apache 2.0

load("@build_bazel_rules_apple//apple:ios.bzl", "ios_unit_test")

objc_library(
    name = "hybrid_decrypt_factory",
    srcs = ["TINKHybridDecryptFactory.mm"],
    hdrs = ["TINKHybridDecryptFactory.h"],
    deps = [
        ":hybrid_decrypt_internal",
        "//cc:keyset_handle",
        "//cc/hybrid:hybrid_decrypt_factory",
        "//cc/util:status",
        "//objc:hybrid_decrypt",
        "//objc:keyset_handle",
        "//objc/util:errors",
    ],
)

objc_library(
    name = "hybrid_encrypt_factory",
    srcs = ["TINKHybridEncryptFactory.mm"],
    hdrs = ["TINKHybridEncryptFactory.h"],
    deps = [
        ":hybrid_encrypt_internal",
        "//cc:keyset_handle",
        "//cc/hybrid:hybrid_encrypt_factory",
        "//cc/util:status",
        "//objc:hybrid_encrypt",
        "//objc:keyset_handle",
        "//objc/util:errors",
    ],
)

objc_library(
    name = "hybrid_config",
    srcs = ["TINKHybridConfig.mm"],
    hdrs = ["TINKHybridConfig.h"],
    deps = [
        "//cc/hybrid:hybrid_config",
        "//objc:registry_config",
        "//objc:version",
        "//objc/util:errors",
        "//objc/util:strings",
        "//proto:all_objc_proto",
    ],
)

objc_library(
    name = "hybrid_decrypt_key_manager",
    srcs = ["TINKHybridDecryptKeyManager.mm"],
    hdrs = [
        "TINKHybridDecryptKeyManager.h",
        "TINKHybridDecryptKeyManager_Internal.h",
    ],
    deps = [
        "//cc:hybrid_decrypt",
        "//cc:key_manager",
    ],
)

objc_library(
    name = "hybrid_encrypt_key_manager",
    srcs = ["TINKHybridEncryptKeyManager.mm"],
    hdrs = [
        "TINKHybridEncryptKeyManager.h",
        "TINKHybridEncryptKeyManager_Internal.h",
    ],
    deps = [
        "//cc:hybrid_encrypt",
        "//cc:key_manager",
    ],
)

####################################
#         Private/Internal         #
####################################

objc_library(
    name = "ecies_aead_hkdf_public_key_manager",
    srcs = ["TINKEciesAeadHkdfPublicKeyManager.mm"],
    hdrs = ["TINKEciesAeadHkdfPublicKeyManager.h"],
    deps = [
        ":hybrid_encrypt_internal",
        ":hybrid_encrypt_key_manager",
        "//cc:hybrid_encrypt",
        "//cc:key_manager",
        "//cc/hybrid:ecies_aead_hkdf_public_key_manager",
        "//cc/util:status",
        "//objc:key_manager",
        "//objc/util:errors",
        "//objc/util:strings",
        "//proto:all_objc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:objectivec",
    ],
)

objc_library(
    name = "hybrid_decrypt_internal",
    srcs = [
        "TINKHybridDecryptInternal.mm",
    ],
    hdrs = [
        "TINKHybridDecryptInternal.h",
    ],
    deps = [
        "//cc:hybrid_decrypt",
        "//objc:hybrid_decrypt",
        "//objc/util:errors",
        "//objc/util:strings",
        "@com_google_absl//absl/strings",
    ],
)

objc_library(
    name = "hybrid_encrypt_internal",
    srcs = [
        "TINKHybridEncryptInternal.mm",
    ],
    hdrs = [
        "TINKHybridEncryptInternal.h",
    ],
    deps = [
        "//cc:hybrid_encrypt",
        "//objc:hybrid_encrypt",
        "//objc/util:errors",
        "//objc/util:strings",
        "@com_google_absl//absl/strings",
    ],
)
